{
	// Place your snippets for python here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Initialize tenants REPL": {
		"prefix": "consolekit",
		"body": [
			"from ue_tenants.models import AppClient",
			"from django.utils import timezone",
			"from django.utils.dateparse import parse_datetime, parse_date",
			"from django.contrib.contenttypes.models import ContentType",
			"from dynamic_attributes.utils import set_dynamic_attributes",
			"dev_app = AppClient.objects.get(schema_name=\"dev\")",
			"dev_app.activate()",
			"set_dynamic_attributes(\"dev\")",
		],
		"description": "Init script for Django REPL for tenants"
	},
	"Log with var name": {
		"prefix": "varlog",
		"body": [
			"print(f\"{$1 = }\")",
		],
		"description": "Init script for Django REPL for tenants"
	},
	"Sctipt template": {
		"prefix": "prodscript",
		"body": [
			"from ue_tenants.models import AppClient",
			"from django_tenants.utils import tenant_context",
			"from tqdm import tqdm",
			"",
			"def execute_script():",
			"    for tenant in tqdm(AppClient.objects.non_public().done()):",
			"        with tenant_context(tenant):",
			"            pass",
			"",
			"    print(\"DONE\")",
			"",
			"execute_script()",
		],
		"description": "Prod script template"
	},
}